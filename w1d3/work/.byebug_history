c
n
display smaller_set
display array
c
cc
c
temp
n
temp
c
n
c
n
display return_array
display right
display left
c
finish
!!!
n
c
n
c
n
c
n
display return_array
display right
display left
c
n
display right
display left
c
display right
display left
exit
c
display array
display right
display left
left
c
next
array
c
n
step
n
display array.length
step
exit
c
finish
done
s
array
s
exit
c
n
array
display array.length / 2
n
display array[array.length / 2]
display target
target == array[array.length / 2]
array[array.length / 2]
(array.length / 2)
s
target < array[array.length / 2]
exit
bsearch(a,6)
load 'binary_search.rb'
bsearch(a,6)
load 'binary_search.rb'
bsearch(a,6)
load 'binary_search.rb'
bsearch(a,6)
load 'binary_search.rb'
bsearch(a,7)
bsearch(a,6)
bsearch(a,4)
bsearch(a,6)
load 'binary_search.rb'
bsearch(a,4)
bsearch(a,7)
bsearch(a,6)
load 'binary_search.rb'
bsearch(a,6)
load 'binary_search.rb'
bsearch(a,6)
bsearch(a,2)
load 'binary_search.rb'
bsearch(a,6)
bsearch(a,2)
load 'binary_search.rb'
bsearch(a,2)
a
load 'binary_search.rb'
a
bsearch(a,2)
load 'binary_search.rb'
bsearch(a,2)
a = [1,2,3,4,5,6,7]
load 'binary_search.rb'
c[c.length/2]
c = [1,2,3,4]
b = a
b = [1,2,3,4]
a[a.length/2]
a = [1,2,3]
11 / 2
10 / 2
s
perm_arr
s
temp
s
output
out
s
el
temp
perm_arr
exit
EXIT
quit
end
exit
n
temp
array
